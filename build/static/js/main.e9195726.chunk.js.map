{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","persons","getAll","axios","get","then","response","data","create","newObject","post","del","id","delete","concat","update","put","Notification","_ref","message","react_default","a","createElement","className","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleName","event","setState","newName","target","value","handlePhone","newPhone","handleDelete","person","state","find","n","console","log","window","confirm","personService","filter","p","success","name","setTimeout","handleSearch","search","addPerson","preventDefault","personObject","phone","map","includes","foundPerson","catch","_this2","components_Notification","App_Rajaus","rajaus","App_Lomake","lomake","App_Person","tyyppi","React","Component","Rajaus","onChange","Lomake","_ref2","onSubmit","type","Person","namesToShow","showAll","key","App_Name","Phone","Name","_ref3","onClick","_ref4","promise","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e9195726.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n\n  const create = (newObject) => {\n    return axios.post(baseUrl, newObject)\n  }\n\n  const del = (id) => {\n    axios.delete(`${baseUrl}/${id}`)\n    const request = axios.get(baseUrl)  \n    return request.then(response => response.data)\n  }\n\n  const update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n  }\n\n  export default { getAll, create, del, update}","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n    return (\n      <div className=\"success\">\n        {message}\n      </div>\n    )\n  }\n\n  export default Notification","import React from 'react';\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [],\n      newName: '',\n      newPhone: '',\n      success: null,\n      search: ''\n    }\n    console.log('constructor')\n  }\n\n  handleName = (event) => {\n      this.setState({ newName: event.target.value })   \n  }\n\n  handlePhone = (event) => {\n        this.setState({ newPhone: event.target.value })      \n  }\n\n  handleDelete = (id) => {\n    const person = this.state.persons.find(n => n.id === id)\n    return () => {\n      console.log('person '+id+' needs to be deleted')\n\n      if (window.confirm(\"Poistetaanko nimi luettelosta?\")) {\n        personService\n          .del(id)\n          .then(persons => {\n            this.setState({\n            persons: this.state.persons.filter(p => p.id !== id),\n            success: `listalta on nyt poistettu ' ${person.name} ' `\n          })\n          setTimeout(() => {\n            this.setState({ success: null })\n          }, 5000)\n        })\n      } \n    }\n  }\n\n  handleSearch = (event) => {\n    this.setState({search: event.target.value})\n  }\n\n  addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: this.state.newName, \n      phone: this.state.newPhone,\n    }\n\n    const personNames = this.state.persons.map(person=> person.name)\n    \n      if (!personNames.includes(this.state.newName)) {\n      console.log('before post')\n      console.log(this.state.persons) \n      personService\n        .create(personObject)\n        .then(response => {\n          console.log(response)\n          this.setState({\n            persons: this.state.persons.concat(response.data),\n            newName: '',\n            newPhone: '',\n            success: `listalle on nyt lisätty ' ${personObject.name} ' `\n          })\n          setTimeout(() => {\n            this.setState({ success: null })\n          }, 5000)\n        })\n      \n        console.log('after post')\n        console.log(this.state.persons)\n    } else {\n      const foundPerson = this.state.persons.find(person => person.name ===this.state.newName)\n\n      console.log ('numeronmuutoksen löytämä id', foundPerson.id)\n      if (window.confirm(\"Nimi löytyy jo, korvataanko numero uudella?\")) {\n\n        personService\n          .update(foundPerson.id, personObject)\n          .then(response => {\n            this.setState ({           \n              persons: this.state.persons.map(person=> person.id !== foundPerson.id ? person : response.data),\n              newName: '',\n              newPhone: '',\n              success: `Muutettiin numeroa henkilölle ' ${personObject.name} ' `\n          })\n        })  \n        .catch(success => {\n          this.setState({\n            success: `Tämä luettelotieto '${foundPerson.name}' on jo valitettavasti poistettu palvelimelta`,\n            persons: this.state.persons.filter(n => n.id !== foundPerson.id)\n        })\n        })\n        setTimeout(() => {\n          this.setState({ success: null })\n        }, 5000)\n    }\n  }\n  }\n\n  componentDidMount() {\n    console.log('did mount')\n    personService\n      .getAll()\n      .then(response=> {\n        console.log('promise fulfilled')\n        this.setState({ persons: response })\n      })\n  }\n\n  render() {\n    \n    console.log('render')\n    console.log(this.state.persons)\n    return (\n      <div>   \n        <h2>Puhelinluettelo</h2>      \n        <Notification message={this.state.success}/>  \n        <Rajaus rajaus = {this} />\n        <Lomake lomake = {this} />\n        <h2>Numerot</h2>          \n        <Person tyyppi = {this} />  \n      </div>\n    )\n  }\n}\n\nconst Rajaus = ({rajaus}) => {\n  return (\n    <div> \n      rajaa näytettäviä:\n    <input \n      value = {rajaus.state.search}\n      onChange = {rajaus.handleSearch}\n    />\n    </div> \n  )\n  \n}\n\n\nconst Lomake = ({lomake}) => {\n  //console.log('lomakkeen saama props', lomake)\n  return (\n    <form onSubmit={lomake.addPerson}>\n    <div>    \n      nimi: \n    <input \n      value = {lomake.state.newName}\n      onChange = {lomake.handleName}\n    />\n    </div>\n    <div>\n      numero: \n    <input \n      value = {lomake.state.newPhone}\n      onChange = {lomake.handlePhone}\n    />\n    </div>  \n    <div>\n     <button type=\"submit\">lisää</button>\n   </div>\n  </form> \n  )\n}\n\nconst Person = (props) => {\n  console.log('personin saama props', props)\n\n  const namesToShow =\n  props.tyyppi.state.showAll ?\n    props.tyyppi.state.persons :\n    props.tyyppi.state.persons.filter(person=> person.name.includes(props.tyyppi.state.search))\n\n  return (\n    <ul>\n    {namesToShow.map(person => \n      <li key = {person.id}>\n      <Name \n      person ={person} \n      del ={props.tyyppi.handleDelete(person.id)}/>\n      <Phone person={person}/></li>)} \n    </ul>\n  )\n}\n\nconst Name = ({person, del}) => {\n  const label = 'poista'\n  return (\n  <p><button onClick={del}>{label}</button> {person.name}  </p>\n  )\n}\n\nconst Phone = ({person}) => {\n  return person.phone\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport axios from 'axios'\nimport './index.css'\n\nconst promise = axios.get('/api/persons')\nconsole.log(promise)\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}